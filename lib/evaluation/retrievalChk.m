function isPassRetTest = retrievalChk(config, reportFile, varargin)
% RETRIEVALCHK retrieval algorithm check.
%
% USAGE:
%    retrievalChk(config, reportFile)
%
% INPUTS:
%    config: struct
%    reportFile: char
%
% KEYWORDS:
%    figFolder: char
%    figFormat: char
%
% OUTPUTS:
%    isPassRetTest: logical
%
% HISTORY:
%    2024-05-20: first edition by Zhenping
% .. Authors: - zp.yin@whu.edu.cn

global LEToolboxInfo

p = inputParser;
p.KeepUnmatched = true;

addRequired(p, 'config', @isstruct);
addRequired(p, 'reportFile', @ischar);
addParameter(p, 'figFolder', '', @ischar);
addParameter(p, 'figFormat', 'png', @ischar);

parse(p, config, reportFile, varargin{:});

%% report file
fid = fopen(reportFile, 'a');
fprintf(fid, '\n## Retrieval Algorithm Check\n');

%% read data

% read signal
sigFile = fullfile(LEToolboxInfo.projectDir, 'data', 'EARLINET_Test_dataset', 'NC', 'EARLINET-Test-Signal.nc');
sig355 = ncread(sigFile, 'signal_355');
sig386 = ncread(sigFile, 'signal_386');
sig532 = ncread(sigFile, 'signal_532');
sig607 = ncread(sigFile, 'signal_607');
sig1064 = ncread(sigFile, 'signal_1064');
temperature = ncread(sigFile, 'temperature');   % [degree celsius]
pressure = ncread(sigFile, 'pressure');   % [hPa]

% read solutions
slvFile = fullfile(LEToolboxInfo.projectDir, 'data', 'EARLINET_Test_dataset', 'NC', 'EARLINET-Test-Signal-Solution.nc');
height = ncread(slvFile, 'height');
aExt355 = ncread(slvFile, 'aerosol_extinction_coefficient_355');
aBsc355 = ncread(slvFile, 'aerosol_backscatter_coefficient_355');
% aLR355 = ncread(slvFile, 'lidar_ratio_355');
aExt532 = ncread(slvFile, 'aerosol_extinction_coefficient_532');
aBsc532 = ncread(slvFile, 'aerosol_backscatter_coefficient_532');
% aLR532 = ncread(slvFile, 'lidar_ratio_532');
% aExt1064 = ncread(slvFile, 'aerosol_extinction_coefficient_1064');
aBsc1064 = ncread(slvFile, 'aerosol_backscatter_coefficient_1064');
% aLR1064 = ncread(slvFile, 'lidar_ratio_1064');

%% molecule scattering
[mBsc355, ~] = rayleigh_scattering(355, pressure, temperature + 273.14, 360, 80);
[mBsc532, ~] = rayleigh_scattering(532, pressure, temperature + 273.14, 360, 80);
[mBsc1064, ~] = rayleigh_scattering(1064, pressure, temperature + 273.14, 360, 80);

%% signal smoothing
piecewiseSM = config.retrievalChkCfg.smoothwindow;
for iW = 1:size(piecewiseSM, 1)
    piecewiseSM(iW, 1) = find(height >= piecewiseSM(iW, 1), 1, 'first');
    piecewiseSM(iW, 2) = find(height <= piecewiseSM(iW, 2), 1, 'last');
    piecewiseSM(iW, 3) = round(piecewiseSM(iW, 3) / (height(2) - height(1)));
end

% sig355Sm = smoothWin(sig355, piecewiseSM, 'moving');
% sig532Sm = smoothWin(sig532, piecewiseSM, 'moving');
sig386Sm = smoothWin(sig386, piecewiseSM, 'moving');
sig607Sm = smoothWin(sig607, piecewiseSM, 'moving');
% sig1064Sm = smoothWin(sig1064, piecewiseSM, 'moving');

%% retrieval

% Fernald retrieval (without smoothing)
lr = 62.0;
aBscFernald355 = CMAFernald(height, sig355, 0, lr, [11000, 12000], 0, mBsc355, 16);
aBscFernald355 = transpose(aBscFernald355);
aBscFernald532 = CMAFernald(height, sig532, 0, lr, [11000, 12000], 0, mBsc532, 16);
aBscFernald532 = transpose(aBscFernald532);
aBscFernald1064 = CMAFernald(height, sig1064, 0, lr, [11000, 12000], 0, mBsc1064, 16);
aBscFernald1064 = transpose(aBscFernald1064);

% Raman retrieval
aExtRaman355 = LidarRamanExt(transpose(height), transpose(sig386Sm), 355, 386, 1, transpose(pressure), transpose(temperature) + 273.14, 20, 360, 80, 'moving');
aExtRaman355 = transpose(aExtRaman355);
% [aBscRaman355, aLR355] = LidarRamanBsc(transpose(height), transpose(sig355Sm), transpose(sig386Sm), transpose(aExtRaman355), 1, transpose(mExt355), transpose(mBsc355), [7000, 7500], 355, 0, 20, true);
% aBscRaman355 = transpose(aBscRaman355);
% aLR355 = transpose(aLR355);

aExtRaman532 = LidarRamanExt(transpose(height), transpose(sig607Sm), 532, 607, 1, transpose(pressure), transpose(temperature) + 273.14, 20, 360, 80, 'moving');
aExtRaman532 = transpose(aExtRaman532);
% [aBscRaman532, aLR532] = LidarRamanBsc(transpose(height), transpose(sig532Sm), transpose(sig607Sm), transpose(aExtRaman532), 1, transpose(mExt532), transpose(mBsc532), [7000, 7500], 532, 0, 20, true);
% aBscRaman532 = transpose(aBscRaman532);
% aLR532 = transpose(aLR532);

%% signal evaluation

% relative deviation
aBscFernald355Dev = (aBscFernald355 - aBsc355) ./ aBsc355 * 100;
aBscFernald532Dev = (aBscFernald532 - aBsc532) ./ aBsc532 * 100;
aBscFernald1064Dev = (aBscFernald1064 - aBsc1064) ./ aBsc1064 * 100;
% aBscRaman355Dev = (aBscRaman355 - aBsc355) ./ aBsc355 * 100;
aExtRaman355Dev = (aExtRaman355 - aExt355) ./ aExt355 * 100;
% aLRRaman355Dev = (aLR355 - aLR355) ./ aLR355 * 100;
% aBscRaman532Dev = (aBscRaman532 - aBsc532) ./ aBsc532 * 100;
aExtRaman532Dev = (aExtRaman532 - aExt532) ./ aExt532 * 100;
% aLRRaman532Dev = (aLR532 - aLR532) ./ aLR532 * 100;

% mean relative deviation
nES = size(config.retrievalChkCfg.hChkRange, 1);
meanDevABscFernald355 = NaN(1, nES);
stdDevABscFernald355 = NaN(1, nES);
meanDevABscFernald532 = NaN(1, nES);
stdDevABscFernald532 = NaN(1, nES);
meanDevABscFernald1064 = NaN(1, nES);
stdDevABscFernald1064 = NaN(1, nES);
% meanDevABscRaman355 = NaN(1, nES);
% stdDevABscRaman355 = NaN(1, nES);
meanDevAExtRaman355 = NaN(1, nES);
stdDevAExtRaman355 = NaN(1, nES);
% meanDevALRRaman355 = NaN(1, nES);
% stdDevALRRaman355 = NaN(1, nES);
% meanDevABscRaman532 = NaN(1, nES);
% stdDevABscRaman532 = NaN(1, nES);
meanDevAExtRaman532 = NaN(1, nES);
stdDevAExtRaman532 = NaN(1, nES);
% meanDevALRRaman532 = NaN(1, nES);
% stdDevALRRaman532 = NaN(1, nES);
isPassFernald355Chk = false(1, nES);
isPassFernald532Chk = false(1, nES);
isPassFernald1064Chk = false(1, nES);
isPassRaman355Chk = false(1, nES);
isPassRaman532Chk = false(1, nES);
for iES = 1:nES
    isInES = (height >= config.retrievalChkCfg.hChkRange(iES, 1)) & ...
             (height <= config.retrievalChkCfg.hChkRange(iES, 2));

    meanDevABscFernald355(iES) = nanmean(aBscFernald355(isInES) - aBsc355(isInES)) ./ nanmean(aBsc355(isInES)) * 100;
    stdDevABscFernald355(iES) = nanstd(abs(aBscFernald355(isInES) - aBsc355(isInES))) ./ nanmean(abs(aBsc355(isInES))) * 100;

    meanDevABscFernald532(iES) = nanmean(aBscFernald532(isInES) - aBsc532(isInES)) ./ nanmean(aBsc532(isInES)) * 100;
    stdDevABscFernald532(iES) = nanstd(abs(aBscFernald532(isInES) - aBsc532(isInES))) ./ nanmean(abs(aBsc532(isInES))) * 100;

    meanDevABscFernald1064(iES) = nanmean(aBscFernald1064(isInES) - aBsc1064(isInES)) ./ nanmean(aBsc1064(isInES)) * 100;
    stdDevABscFernald1064(iES) = nanstd(abs(aBscFernald1064(isInES) - aBsc1064(isInES))) ./ nanmean(abs(aBsc1064(isInES))) * 100;

    meanDevAExtRaman355(iES) = nanmean(aExtRaman355(isInES) - aExt355(isInES)) ./ nanmean(aExt355(isInES)) * 100;
    stdDevAExtRaman355(iES) = nanstd(abs(aExtRaman355(isInES) - aExt355(isInES))) ./ nanmean(abs(aExt355(isInES))) * 100;

    meanDevAExtRaman532(iES) = nanmean(aExtRaman532(isInES) - aExt532(isInES)) ./ nanmean(aExt532(isInES)) * 100;
    stdDevAExtRaman532(iES) = nanstd(abs(aExtRaman532(isInES) - aExt532(isInES))) ./ nanmean(abs(aExt532(isInES))) * 100;

    fprintf(fid, 'Mean relative deviations of Fernald retrieval at 355 nm: %6.2f%% (max: %6.2f%%)\n', ...
        meanDevABscFernald355(iES), ...
        config.retrievalChkCfg.maxDev(iES, 1));
    isPassFernald355Chk(iES) = (meanDevABscFernald355(iES) <= config.retrievalChkCfg.maxDev(iES, 1));
    fprintf(fid, 'Standard relative deviations of Fernald retrieval at 355 nm: %6.2f%% (max: %6.2f%%)\n', ...
        stdDevABscFernald355(iES), ...
        config.retrievalChkCfg.maxDev(iES, 1));

    fprintf(fid, 'Mean relative deviations of Fernald retrieval at 532 nm: %6.2f%% (max: %6.2f%%)\n', ...
        meanDevABscFernald532(iES), ...
        config.retrievalChkCfg.maxDev(iES, 1));
    isPassFernald532Chk(iES) = (meanDevABscFernald532(iES) <= config.retrievalChkCfg.maxDev(iES, 1));
    fprintf(fid, 'Standard relative deviations of Fernald retrieval at 532 nm: %6.2f%% (max: %6.2f%%)\n', ...
        stdDevABscFernald532(iES), ...
        config.retrievalChkCfg.maxDev(iES, 1));

    fprintf(fid, 'Mean relative deviations of Fernald retrieval at 1064 nm: %6.2f%% (max: %6.2f%%)\n', ...
        meanDevABscFernald1064(iES), ...
        config.retrievalChkCfg.maxDev(iES, 1));
    isPassFernald1064Chk(iES) = (meanDevABscFernald1064(iES) <= config.retrievalChkCfg.maxDev(iES, 1));
    fprintf(fid, 'Standard relative deviations of Fernald retrieval at 1064 nm: %6.2f%% (max: %6.2f%%)\n', ...
        stdDevABscFernald1064(iES), ...
        config.retrievalChkCfg.maxDev(iES, 1));

    fprintf(fid, 'Mean relative deviations of Raman retrieval at 355 nm: %6.2f%% (max: %6.2f%%)\n', ...
        meanDevAExtRaman355(iES), ...
        config.retrievalChkCfg.maxDev(iES, 1));
    isPassRaman355Chk(iES) = (meanDevAExtRaman355(iES) <= config.retrievalChkCfg.maxDev(iES, 1));
    fprintf(fid, 'Standard relative deviations of Raman retrieval at 355 nm: %6.2f%% (max: %6.2f%%)\n', ...
        stdDevAExtRaman355(iES), ...
        config.retrievalChkCfg.maxDev(iES, 1));

    fprintf(fid, 'Mean relative deviations of Raman retrieval at 532 nm: %6.2f%% (max: %6.2f%%)\n', ...
        meanDevAExtRaman532(iES), ...
        config.retrievalChkCfg.maxDev(iES, 1));
    isPassRaman532Chk(iES) = (meanDevAExtRaman532(iES) <= config.retrievalChkCfg.maxDev(iES, 1));
    fprintf(fid, 'Standard relative deviations of Raman retrieval at 532 nm: %6.2f%% (max: %6.2f%%)\n', ...
        stdDevAExtRaman532(iES), ...
        config.retrievalChkCfg.maxDev(iES, 1));
end

%% write report
fprintf(fid, 'Pass Fernald 355 nm retrieval test? (1:yes; 0: no): %d\n', all(isPassFernald355Chk));
fprintf(fid, 'Pass Fernald 532 nm retrieval test? (1:yes; 0: no): %d\n', all(isPassFernald532Chk));
fprintf(fid, 'Pass Fernald 1064 nm retrieval test? (1:yes; 0: no): %d\n', all(isPassFernald1064Chk));
fprintf(fid, 'Pass Raman 355 nm retrieval test? (1:yes; 0: no): %d\n', all(isPassRaman355Chk));
fprintf(fid, 'Pass Raman 532 nm retrieval test? (1:yes; 0: no): %d\n', all(isPassRaman532Chk));
isPassRetTest = all(isPassFernald355Chk) & all(isPassFernald532Chk) & all(isPassFernald1064Chk) & all(isPassRaman355Chk) & all(isPassRaman532Chk);

%% data visualization

% Fernald 355 nm
figure('Position', [0, 10, 700, 380], ...
       'Units', 'Pixels', ...
       'Color', 'w', ...
       'Visible', config.figVisible);

subfig = subfigPos([0.1, 0.15, 0.87, 0.81], 1, 4, 0.04, 0);

subplot('Position', subfig(1, :), 'Units', 'Normalized');

hold on
plot(sig355 .* height.^2, height * 1e-3, '-b', 'LineWidth', 2);
hold off;

xlabel('RCS (355 nm)');
ylabel('Height (km)');

xlim([1e8, 1e11]);
ylim([0, 15]);

set(gca, 'XMinorTick', 'on', ...
         'YMinorTick', 'on', ...
         'Layer', 'Top', ...
         'Box', 'on', ...
         'LineWidth', 2, ...
         'XScale', 'log');

text(-0.2, -0.16, sprintf('Version: %s', LEToolboxInfo.programVersion), ...
    'Units', 'Normalized', ...
    'FontSize', 10, ...
    'HorizontalAlignment', 'left', ...
    'FontWeight', 'Bold');

subplot('Position', subfig(2, :), 'Units', 'Normalized');
hold on
p1 = plot(aBscFernald355 * 1e6, height * 1e-3, '-b', 'LineWidth', 2, 'DisplayName', 'Retrieved');
p2 = plot(aBsc355 * 1e6, height * 1e-3, '-r', 'LineWidth', 2, 'DisplayName', 'True');
hold off;

xlabel('Backscatter (Mm-1sr-1)');
ylabel('');

xlim([-0.2, 4]);
ylim([0, 15]);

set(gca, 'XMinorTick', 'on', ...
         'YMinorTick', 'on', ...
         'Layer', 'Top', ...
         'Box', 'on', ...
         'LineWidth', 2, 'YTickLabel', '');

lgHandle = legend([p1, p2], 'Location', 'NorthEast');
lgHandle.Interpreter = 'None';

subplot('Position', subfig(3, :), 'Units', 'Normalized');

hold on;
plot(aBscFernald355Dev, height * 1e-3, '-k', 'LineWidth', 2);
plot([0, 0], [-100000, 100000], '--k');

% error bound (mean deviation)
for iES = 1:nES
    plot([-1, -1] * config.retrievalChkCfg.maxDev(iES, 1), ...
        config.retrievalChkCfg.hChkRange(iES, :) * 1e-3, '--', ...
        'Color', [160, 160, 160]/255, ...
        'LineWidth', 2, ...
        'DisplayName', 'Mean Dev.');
    plot([1, 1] * config.retrievalChkCfg.maxDev(iES, 1), ...
        config.retrievalChkCfg.hChkRange(iES, :) * 1e-3, '--', ...
        'Color', [160, 160, 160]/255, ...
        'LineWidth', 2);
end

for iPatch = 1:nES
    hShaded = patch(...
        [config.retrievalChkCfg.maxDev(iPatch, 1), ...
         config.retrievalChkCfg.maxDev(iPatch, 1), ...
         -config.retrievalChkCfg.maxDev(iPatch, 1), ...
         -config.retrievalChkCfg.maxDev(iPatch, 1)], ...
        [config.retrievalChkCfg.hChkRange(iPatch, 1) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 2) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 2) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 1) * 1e-3], [160, 160, 160]/255);
    hShaded.FaceAlpha = 0.3;
    hShaded.EdgeColor = 'None';
    hold on;
end

hold off;

xlabel('Relative Dev. (%)');
ylabel('');

xlim([-50, 50]);
ylim([0, 15]);
set(gca, 'XMinorTick', 'on', ...
         'YMinorTick', 'on', ...
         'Layer', 'Top', ...
         'Box', 'on', ...
         'LineWidth', 2, 'YTickLabel', '');

subplot('Position', subfig(4, :), 'Units', 'Normalized');

hold on

scatter(meanDevABscFernald355, ...
    mean(config.retrievalChkCfg.hChkRange, 2) * 1e-3, 25, ...
    'Marker', 's', ...
    'MarkerFaceColor', 'k', ...
    'MarkerEdgeColor', 'k');

plot([0, 0], [-100000, 100000], '--k');

% error bound (mean deviation)
for iES = 1:nES
    plot([-1, -1] * config.retrievalChkCfg.maxDev(iES, 1), ...
        config.retrievalChkCfg.hChkRange(iES, :) * 1e-3, '--', ...
        'Color', [160, 160, 160]/255, ...
        'LineWidth', 2, ...
        'DisplayName', 'Mean Dev.');
    plot([1, 1] * config.retrievalChkCfg.maxDev(iES, 1), ...
        config.retrievalChkCfg.hChkRange(iES, :) * 1e-3, '--', ...
        'Color', [160, 160, 160]/255, ...
        'LineWidth', 2);
end

for iPatch = 1:nES
    hShaded = patch(...
        [config.retrievalChkCfg.maxDev(iPatch, 1), ...
         config.retrievalChkCfg.maxDev(iPatch, 1), ...
         -config.retrievalChkCfg.maxDev(iPatch, 1), ...
         -config.retrievalChkCfg.maxDev(iPatch, 1)], ...
        [config.retrievalChkCfg.hChkRange(iPatch, 1) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 2) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 2) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 1) * 1e-3], [160, 160, 160]/255);
    hShaded.FaceAlpha = 0.3;
    hShaded.EdgeColor = 'None';
    hold on;
end

xlabel('Mean Rel. Dev. (%)');
ylabel('');

xlim([-50, 50]);
ylim([0, 15]);
set(gca, 'XMinorTick', 'on', ...
         'YMinorTick', 'on', ...
         'Layer', 'Top', ...
         'Box', 'on', ...
         'LineWidth', 2, ...
         'YTickLabel', '');

if (exist(LEToolboxInfo.institute_logo, 'file') == 2) && LEToolboxInfo.flagWaterMark
    addWaterMark(LEToolboxInfo.institute_logo, [0.5, 0.5, 0.6, 0.6]);
end

if exist(p.Results.figFolder, 'dir')
    export_fig(gcf, fullfile(p.Results.figFolder, sprintf('Fernald_retrieval_355nm_comparison.%s', p.Results.figFormat)), '-r300');
end

% Fernald 532 nm
figure('Position', [0, 10, 700, 380], ...
       'Units', 'Pixels', ...
       'Color', 'w', ...
       'Visible', config.figVisible);

subfig = subfigPos([0.1, 0.15, 0.87, 0.81], 1, 4, 0.04, 0);

subplot('Position', subfig(1, :), 'Units', 'Normalized');

hold on
plot(sig532 .* height.^2, height * 1e-3, '-b', 'LineWidth', 2);
hold off;

xlabel('RCS (532 nm)');
ylabel('Height (km)');

xlim([1e8, 1e11]);
ylim([0, 15]);

set(gca, 'XMinorTick', 'on', ...
         'YMinorTick', 'on', ...
         'Layer', 'Top', ...
         'Box', 'on', ...
         'LineWidth', 2, ...
         'XScale', 'log');

text(-0.2, -0.16, sprintf('Version: %s', LEToolboxInfo.programVersion), ...
    'Units', 'Normalized', ...
    'FontSize', 10, ...
    'HorizontalAlignment', 'left', ...
    'FontWeight', 'Bold');

subplot('Position', subfig(2, :), 'Units', 'Normalized');
hold on
p1 = plot(aBscFernald532 * 1e6, height * 1e-3, '-b', 'LineWidth', 2, 'DisplayName', 'Retrieved');
p2 = plot(aBsc532 * 1e6, height * 1e-3, '-r', 'LineWidth', 2, 'DisplayName', 'True');
hold off;

xlabel('Backscatter (Mm-1sr-1)');
ylabel('');

xlim([-0.2, 4]);
ylim([0, 15]);

set(gca, 'XMinorTick', 'on', ...
         'YMinorTick', 'on', ...
         'Layer', 'Top', ...
         'Box', 'on', ...
         'LineWidth', 2, 'YTickLabel', '');

lgHandle = legend([p1, p2], 'Location', 'NorthEast');
lgHandle.Interpreter = 'None';

subplot('Position', subfig(3, :), 'Units', 'Normalized');

hold on;
plot(aBscFernald532Dev, height * 1e-3, '-k', 'LineWidth', 2);
plot([0, 0], [-100000, 100000], '--k');

% error bound (mean deviation)
for iES = 1:nES
    plot([-1, -1] * config.retrievalChkCfg.maxDev(iES, 1), ...
        config.retrievalChkCfg.hChkRange(iES, :) * 1e-3, '--', ...
        'Color', [160, 160, 160]/255, ...
        'LineWidth', 2, ...
        'DisplayName', 'Mean Dev.');
    plot([1, 1] * config.retrievalChkCfg.maxDev(iES, 1), ...
        config.retrievalChkCfg.hChkRange(iES, :) * 1e-3, '--', ...
        'Color', [160, 160, 160]/255, ...
        'LineWidth', 2);
end

for iPatch = 1:nES
    hShaded = patch(...
        [config.retrievalChkCfg.maxDev(iPatch, 1), ...
         config.retrievalChkCfg.maxDev(iPatch, 1), ...
         -config.retrievalChkCfg.maxDev(iPatch, 1), ...
         -config.retrievalChkCfg.maxDev(iPatch, 1)], ...
        [config.retrievalChkCfg.hChkRange(iPatch, 1) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 2) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 2) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 1) * 1e-3], [160, 160, 160]/255);
    hShaded.FaceAlpha = 0.3;
    hShaded.EdgeColor = 'None';
    hold on;
end

hold off;

xlabel('Relative Dev. (%)');
ylabel('');

xlim([-50, 50]);
ylim([0, 15]);
set(gca, 'XMinorTick', 'on', ...
         'YMinorTick', 'on', ...
         'Layer', 'Top', ...
         'Box', 'on', ...
         'LineWidth', 2, 'YTickLabel', '');

subplot('Position', subfig(4, :), 'Units', 'Normalized');

hold on

scatter(meanDevABscFernald532, ...
    mean(config.retrievalChkCfg.hChkRange, 2) * 1e-3, 25, ...
    'Marker', 's', ...
    'MarkerFaceColor', 'k', ...
    'MarkerEdgeColor', 'k');

plot([0, 0], [-100000, 100000], '--k');

% error bound (mean deviation)
for iES = 1:nES
    plot([-1, -1] * config.retrievalChkCfg.maxDev(iES, 1), ...
        config.retrievalChkCfg.hChkRange(iES, :) * 1e-3, '--', ...
        'Color', [160, 160, 160]/255, ...
        'LineWidth', 2, ...
        'DisplayName', 'Mean Dev.');
    plot([1, 1] * config.retrievalChkCfg.maxDev(iES, 1), ...
        config.retrievalChkCfg.hChkRange(iES, :) * 1e-3, '--', ...
        'Color', [160, 160, 160]/255, ...
        'LineWidth', 2);
end

for iPatch = 1:nES
    hShaded = patch(...
        [config.retrievalChkCfg.maxDev(iPatch, 1), ...
         config.retrievalChkCfg.maxDev(iPatch, 1), ...
         -config.retrievalChkCfg.maxDev(iPatch, 1), ...
         -config.retrievalChkCfg.maxDev(iPatch, 1)], ...
        [config.retrievalChkCfg.hChkRange(iPatch, 1) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 2) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 2) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 1) * 1e-3], [160, 160, 160]/255);
    hShaded.FaceAlpha = 0.3;
    hShaded.EdgeColor = 'None';
    hold on;
end

xlabel('Mean Rel. Dev. (%)');
ylabel('');

xlim([-50, 50]);
ylim([0, 15]);
set(gca, 'XMinorTick', 'on', ...
         'YMinorTick', 'on', ...
         'Layer', 'Top', ...
         'Box', 'on', ...
         'LineWidth', 2, ...
         'YTickLabel', '');

if (exist(LEToolboxInfo.institute_logo, 'file') == 2) && LEToolboxInfo.flagWaterMark
    addWaterMark(LEToolboxInfo.institute_logo, [0.5, 0.5, 0.6, 0.6]);
end

if exist(p.Results.figFolder, 'dir')
    export_fig(gcf, fullfile(p.Results.figFolder, sprintf('Fernald_retrieval_532nm_comparison.%s', p.Results.figFormat)), '-r300');
end

% Fernald 1064 nm
figure('Position', [0, 10, 700, 380], ...
       'Units', 'Pixels', ...
       'Color', 'w', ...
       'Visible', config.figVisible);

subfig = subfigPos([0.1, 0.15, 0.87, 0.81], 1, 4, 0.04, 0);

subplot('Position', subfig(1, :), 'Units', 'Normalized');

hold on
plot(sig1064 .* height.^2, height * 1e-3, '-b', 'LineWidth', 2);
hold off;

xlabel('RCS (1064 nm)');
ylabel('Height (km)');

xlim([1e8, 1e11]);
ylim([0, 15]);

set(gca, 'XMinorTick', 'on', ...
         'YMinorTick', 'on', ...
         'Layer', 'Top', ...
         'Box', 'on', ...
         'LineWidth', 2, ...
         'XScale', 'log');

text(-0.2, -0.16, sprintf('Version: %s', LEToolboxInfo.programVersion), ...
    'Units', 'Normalized', ...
    'FontSize', 10, ...
    'HorizontalAlignment', 'left', ...
    'FontWeight', 'Bold');

subplot('Position', subfig(2, :), 'Units', 'Normalized');
hold on
p1 = plot(aBscFernald1064 * 1e6, height * 1e-3, '-b', 'LineWidth', 2, 'DisplayName', 'Retrieved');
p2 = plot(aBsc1064 * 1e6, height * 1e-3, '-r', 'LineWidth', 2, 'DisplayName', 'True');
hold off;

xlabel('Backscatter (Mm-1sr-1)');
ylabel('');

xlim([-0.2, 4]);
ylim([0, 15]);

set(gca, 'XMinorTick', 'on', ...
         'YMinorTick', 'on', ...
         'Layer', 'Top', ...
         'Box', 'on', ...
         'LineWidth', 2, 'YTickLabel', '');

lgHandle = legend([p1, p2], 'Location', 'NorthEast');
lgHandle.Interpreter = 'None';

subplot('Position', subfig(3, :), 'Units', 'Normalized');

hold on;
plot(aBscFernald1064Dev, height * 1e-3, '-k', 'LineWidth', 2);
plot([0, 0], [-100000, 100000], '--k');

% error bound (mean deviation)
for iES = 1:nES
    plot([-1, -1] * config.retrievalChkCfg.maxDev(iES, 1), ...
        config.retrievalChkCfg.hChkRange(iES, :) * 1e-3, '--', ...
        'Color', [160, 160, 160]/255, ...
        'LineWidth', 2, ...
        'DisplayName', 'Mean Dev.');
    plot([1, 1] * config.retrievalChkCfg.maxDev(iES, 1), ...
        config.retrievalChkCfg.hChkRange(iES, :) * 1e-3, '--', ...
        'Color', [160, 160, 160]/255, ...
        'LineWidth', 2);
end

for iPatch = 1:nES
    hShaded = patch(...
        [config.retrievalChkCfg.maxDev(iPatch, 1), ...
         config.retrievalChkCfg.maxDev(iPatch, 1), ...
         -config.retrievalChkCfg.maxDev(iPatch, 1), ...
         -config.retrievalChkCfg.maxDev(iPatch, 1)], ...
        [config.retrievalChkCfg.hChkRange(iPatch, 1) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 2) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 2) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 1) * 1e-3], [160, 160, 160]/255);
    hShaded.FaceAlpha = 0.3;
    hShaded.EdgeColor = 'None';
    hold on;
end

hold off;

xlabel('Relative Dev. (%)');
ylabel('');

xlim([-50, 50]);
ylim([0, 15]);
set(gca, 'XMinorTick', 'on', ...
         'YMinorTick', 'on', ...
         'Layer', 'Top', ...
         'Box', 'on', ...
         'LineWidth', 2, 'YTickLabel', '');

subplot('Position', subfig(4, :), 'Units', 'Normalized');

hold on

scatter(meanDevABscFernald1064, ...
    mean(config.retrievalChkCfg.hChkRange, 2) * 1e-3, 25, ...
    'Marker', 's', ...
    'MarkerFaceColor', 'k', ...
    'MarkerEdgeColor', 'k');

plot([0, 0], [-100000, 100000], '--k');

% error bound (mean deviation)
for iES = 1:nES
    plot([-1, -1] * config.retrievalChkCfg.maxDev(iES, 1), ...
        config.retrievalChkCfg.hChkRange(iES, :) * 1e-3, '--', ...
        'Color', [160, 160, 160]/255, ...
        'LineWidth', 2, ...
        'DisplayName', 'Mean Dev.');
    plot([1, 1] * config.retrievalChkCfg.maxDev(iES, 1), ...
        config.retrievalChkCfg.hChkRange(iES, :) * 1e-3, '--', ...
        'Color', [160, 160, 160]/255, ...
        'LineWidth', 2);
end

for iPatch = 1:nES
    hShaded = patch(...
        [config.retrievalChkCfg.maxDev(iPatch, 1), ...
         config.retrievalChkCfg.maxDev(iPatch, 1), ...
         -config.retrievalChkCfg.maxDev(iPatch, 1), ...
         -config.retrievalChkCfg.maxDev(iPatch, 1)], ...
        [config.retrievalChkCfg.hChkRange(iPatch, 1) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 2) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 2) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 1) * 1e-3], [160, 160, 160]/255);
    hShaded.FaceAlpha = 0.3;
    hShaded.EdgeColor = 'None';
    hold on;
end

xlabel('Mean Rel. Dev. (%)');
ylabel('');

xlim([-50, 50]);
ylim([0, 15]);
set(gca, 'XMinorTick', 'on', ...
         'YMinorTick', 'on', ...
         'Layer', 'Top', ...
         'Box', 'on', ...
         'LineWidth', 2, ...
         'YTickLabel', '');

if (exist(LEToolboxInfo.institute_logo, 'file') == 2) && LEToolboxInfo.flagWaterMark
    addWaterMark(LEToolboxInfo.institute_logo, [0.5, 0.5, 0.6, 0.6]);
end

if exist(p.Results.figFolder, 'dir')
    export_fig(gcf, fullfile(p.Results.figFolder, sprintf('Fernald_retrieval_1064nm_comparison.%s', p.Results.figFormat)), '-r300');
end

% Raman 355 nm
figure('Position', [0, 10, 700, 380], ...
       'Units', 'Pixels', ...
       'Color', 'w', ...
       'Visible', config.figVisible);

subfig = subfigPos([0.1, 0.15, 0.87, 0.81], 1, 4, 0.04, 0);

subplot('Position', subfig(1, :), 'Units', 'Normalized');

hold on
p1 = plot(sig355 .* height.^2, height * 1e-3, '-b', 'LineWidth', 2, 'DisplayName', '355 nm');
p2 = plot(sig386 .* height.^2, height * 1e-3, '-r', 'LineWidth', 2, 'DisplayName', '386 nm');
hold off;

xlabel('RCS');
ylabel('Height (km)');

xlim([1e8, 1e11]);
ylim([0, 8]);

set(gca, 'XMinorTick', 'on', ...
         'YMinorTick', 'on', ...
         'Layer', 'Top', ...
         'Box', 'on', ...
         'LineWidth', 2, ...
         'XScale', 'log');

lgHandle = legend([p1, p2], 'Location', 'NorthEast');
lgHandle.Interpreter = 'None';
text(-0.2, -0.16, sprintf('Version: %s', LEToolboxInfo.programVersion), ...
    'Units', 'Normalized', ...
    'FontSize', 10, ...
    'HorizontalAlignment', 'left', ...
    'FontWeight', 'Bold');

subplot('Position', subfig(2, :), 'Units', 'Normalized');
hold on
p1 = plot(aExtRaman355 * 1e6, height * 1e-3, '-b', 'LineWidth', 2, 'DisplayName', 'Retrieved');
p2 = plot(aExt355 * 1e6, height * 1e-3, '-r', 'LineWidth', 2, 'DisplayName', 'True');
hold off;

xlabel('Extinction (Mm-1)');
ylabel('');

xlim([-10, 250]);
ylim([0, 8]);

set(gca, 'XMinorTick', 'on', ...
         'YMinorTick', 'on', ...
         'Layer', 'Top', ...
         'Box', 'on', ...
         'LineWidth', 2, 'YTickLabel', '');

lgHandle = legend([p1, p2], 'Location', 'NorthEast');
lgHandle.Interpreter = 'None';

subplot('Position', subfig(3, :), 'Units', 'Normalized');

hold on;
plot(aExtRaman355Dev, height * 1e-3, '-k', 'LineWidth', 2);
plot([0, 0], [-100000, 100000], '--k');

% error bound (mean deviation)
for iES = 1:nES
    plot([-1, -1] * config.retrievalChkCfg.maxDev(iES, 1), ...
        config.retrievalChkCfg.hChkRange(iES, :) * 1e-3, '--', ...
        'Color', [160, 160, 160]/255, ...
        'LineWidth', 2, ...
        'DisplayName', 'Mean Dev.');
    plot([1, 1] * config.retrievalChkCfg.maxDev(iES, 1), ...
        config.retrievalChkCfg.hChkRange(iES, :) * 1e-3, '--', ...
        'Color', [160, 160, 160]/255, ...
        'LineWidth', 2);
end

for iPatch = 1:nES
    hShaded = patch(...
        [config.retrievalChkCfg.maxDev(iPatch, 1), ...
         config.retrievalChkCfg.maxDev(iPatch, 1), ...
         -config.retrievalChkCfg.maxDev(iPatch, 1), ...
         -config.retrievalChkCfg.maxDev(iPatch, 1)], ...
        [config.retrievalChkCfg.hChkRange(iPatch, 1) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 2) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 2) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 1) * 1e-3], [160, 160, 160]/255);
    hShaded.FaceAlpha = 0.3;
    hShaded.EdgeColor = 'None';
    hold on;
end

hold off;

xlabel('Relative Dev. (%)');
ylabel('');

xlim([-50, 50]);
ylim([0, 8]);
set(gca, 'XMinorTick', 'on', ...
         'YMinorTick', 'on', ...
         'Layer', 'Top', ...
         'Box', 'on', ...
         'LineWidth', 2, 'YTickLabel', '');

subplot('Position', subfig(4, :), 'Units', 'Normalized');

hold on

scatter(meanDevAExtRaman355, ...
    mean(config.retrievalChkCfg.hChkRange, 2) * 1e-3, 25, ...
    'Marker', 's', ...
    'MarkerFaceColor', 'k', ...
    'MarkerEdgeColor', 'k');

plot([0, 0], [-100000, 100000], '--k');

% error bound (mean deviation)
for iES = 1:nES
    plot([-1, -1] * config.retrievalChkCfg.maxDev(iES, 1), ...
        config.retrievalChkCfg.hChkRange(iES, :) * 1e-3, '--', ...
        'Color', [160, 160, 160]/255, ...
        'LineWidth', 2, ...
        'DisplayName', 'Mean Dev.');
    plot([1, 1] * config.retrievalChkCfg.maxDev(iES, 1), ...
        config.retrievalChkCfg.hChkRange(iES, :) * 1e-3, '--', ...
        'Color', [160, 160, 160]/255, ...
        'LineWidth', 2);
end

for iPatch = 1:nES
    hShaded = patch(...
        [config.retrievalChkCfg.maxDev(iPatch, 1), ...
         config.retrievalChkCfg.maxDev(iPatch, 1), ...
         -config.retrievalChkCfg.maxDev(iPatch, 1), ...
         -config.retrievalChkCfg.maxDev(iPatch, 1)], ...
        [config.retrievalChkCfg.hChkRange(iPatch, 1) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 2) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 2) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 1) * 1e-3], [160, 160, 160]/255);
    hShaded.FaceAlpha = 0.3;
    hShaded.EdgeColor = 'None';
    hold on;
end

xlabel('Mean Rel. Dev. (%)');
ylabel('');

xlim([-50, 50]);
ylim([0, 8]);
set(gca, 'XMinorTick', 'on', ...
         'YMinorTick', 'on', ...
         'Layer', 'Top', ...
         'Box', 'on', ...
         'LineWidth', 2, ...
         'YTickLabel', '');

if (exist(LEToolboxInfo.institute_logo, 'file') == 2) && LEToolboxInfo.flagWaterMark
    addWaterMark(LEToolboxInfo.institute_logo, [0.5, 0.5, 0.6, 0.6]);
end

if exist(p.Results.figFolder, 'dir')
    export_fig(gcf, fullfile(p.Results.figFolder, sprintf('Raman_retrieval_355nm_comparison.%s', p.Results.figFormat)), '-r300');
end

% Raman 532 nm
figure('Position', [0, 10, 700, 380], ...
       'Units', 'Pixels', ...
       'Color', 'w', ...
       'Visible', config.figVisible);

subfig = subfigPos([0.1, 0.15, 0.87, 0.81], 1, 4, 0.04, 0);

subplot('Position', subfig(1, :), 'Units', 'Normalized');

hold on
p1 = plot(sig532 .* height.^2, height * 1e-3, '-b', 'LineWidth', 2, 'DisplayName', '532 nm');
p2 = plot(sig607 .* height.^2, height * 1e-3, '-r', 'LineWidth', 2, 'DisplayName', '607 nm');
hold off;

xlabel('RCS');
ylabel('Height (km)');

xlim([1e8, 1e11]);
ylim([0, 8]);

set(gca, 'XMinorTick', 'on', ...
         'YMinorTick', 'on', ...
         'Layer', 'Top', ...
         'Box', 'on', ...
         'LineWidth', 2, ...
         'XScale', 'log');

lgHandle = legend([p1, p2], 'Location', 'NorthEast');
lgHandle.Interpreter = 'None';
text(-0.2, -0.16, sprintf('Version: %s', LEToolboxInfo.programVersion), ...
    'Units', 'Normalized', ...
    'FontSize', 10, ...
    'HorizontalAlignment', 'left', ...
    'FontWeight', 'Bold');

subplot('Position', subfig(2, :), 'Units', 'Normalized');
hold on
p1 = plot(aExtRaman532 * 1e6, height * 1e-3, '-b', 'LineWidth', 2, 'DisplayName', 'Retrieved');
p2 = plot(aExt532 * 1e6, height * 1e-3, '-r', 'LineWidth', 2, 'DisplayName', 'True');
hold off;

xlabel('Extinction (Mm-1)');
ylabel('');

xlim([-10, 250]);
ylim([0, 8]);

set(gca, 'XMinorTick', 'on', ...
         'YMinorTick', 'on', ...
         'Layer', 'Top', ...
         'Box', 'on', ...
         'LineWidth', 2, 'YTickLabel', '');

lgHandle = legend([p1, p2], 'Location', 'NorthEast');
lgHandle.Interpreter = 'None';

subplot('Position', subfig(3, :), 'Units', 'Normalized');

hold on;
plot(aExtRaman532Dev, height * 1e-3, '-k', 'LineWidth', 2);
plot([0, 0], [-100000, 100000], '--k');

% error bound (mean deviation)
for iES = 1:nES
    plot([-1, -1] * config.retrievalChkCfg.maxDev(iES, 1), ...
        config.retrievalChkCfg.hChkRange(iES, :) * 1e-3, '--', ...
        'Color', [160, 160, 160]/255, ...
        'LineWidth', 2, ...
        'DisplayName', 'Mean Dev.');
    plot([1, 1] * config.retrievalChkCfg.maxDev(iES, 1), ...
        config.retrievalChkCfg.hChkRange(iES, :) * 1e-3, '--', ...
        'Color', [160, 160, 160]/255, ...
        'LineWidth', 2);
end

for iPatch = 1:nES
    hShaded = patch(...
        [config.retrievalChkCfg.maxDev(iPatch, 1), ...
         config.retrievalChkCfg.maxDev(iPatch, 1), ...
         -config.retrievalChkCfg.maxDev(iPatch, 1), ...
         -config.retrievalChkCfg.maxDev(iPatch, 1)], ...
        [config.retrievalChkCfg.hChkRange(iPatch, 1) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 2) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 2) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 1) * 1e-3], [160, 160, 160]/255);
    hShaded.FaceAlpha = 0.3;
    hShaded.EdgeColor = 'None';
    hold on;
end

hold off;

xlabel('Relative Dev. (%)');
ylabel('');

xlim([-50, 50]);
ylim([0, 8]);
set(gca, 'XMinorTick', 'on', ...
         'YMinorTick', 'on', ...
         'Layer', 'Top', ...
         'Box', 'on', ...
         'LineWidth', 2, 'YTickLabel', '');

subplot('Position', subfig(4, :), 'Units', 'Normalized');

hold on

scatter(meanDevAExtRaman532, ...
    mean(config.retrievalChkCfg.hChkRange, 2) * 1e-3, 25, ...
    'Marker', 's', ...
    'MarkerFaceColor', 'k', ...
    'MarkerEdgeColor', 'k');

plot([0, 0], [-100000, 100000], '--k');

% error bound (mean deviation)
for iES = 1:nES
    plot([-1, -1] * config.retrievalChkCfg.maxDev(iES, 1), ...
        config.retrievalChkCfg.hChkRange(iES, :) * 1e-3, '--', ...
        'Color', [160, 160, 160]/255, ...
        'LineWidth', 2, ...
        'DisplayName', 'Mean Dev.');
    plot([1, 1] * config.retrievalChkCfg.maxDev(iES, 1), ...
        config.retrievalChkCfg.hChkRange(iES, :) * 1e-3, '--', ...
        'Color', [160, 160, 160]/255, ...
        'LineWidth', 2);
end

for iPatch = 1:nES
    hShaded = patch(...
        [config.retrievalChkCfg.maxDev(iPatch, 1), ...
         config.retrievalChkCfg.maxDev(iPatch, 1), ...
         -config.retrievalChkCfg.maxDev(iPatch, 1), ...
         -config.retrievalChkCfg.maxDev(iPatch, 1)], ...
        [config.retrievalChkCfg.hChkRange(iPatch, 1) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 2) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 2) * 1e-3, ...
         config.retrievalChkCfg.hChkRange(iPatch, 1) * 1e-3], [160, 160, 160]/255);
    hShaded.FaceAlpha = 0.3;
    hShaded.EdgeColor = 'None';
    hold on;
end

xlabel('Mean Rel. Dev. (%)');
ylabel('');

xlim([-50, 50]);
ylim([0, 8]);
set(gca, 'XMinorTick', 'on', ...
         'YMinorTick', 'on', ...
         'Layer', 'Top', ...
         'Box', 'on', ...
         'LineWidth', 2, ...
         'YTickLabel', '');

if (exist(LEToolboxInfo.institute_logo, 'file') == 2) && LEToolboxInfo.flagWaterMark
    addWaterMark(LEToolboxInfo.institute_logo, [0.5, 0.5, 0.6, 0.6]);
end

if exist(p.Results.figFolder, 'dir')
    export_fig(gcf, fullfile(p.Results.figFolder, sprintf('Raman_retrieval_532nm_comparison.%s', p.Results.figFormat)), '-r300');
end

if strcmpi(config.figVisible, 'off')
    close all;
end

fclose(fid);

end